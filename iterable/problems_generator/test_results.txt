F..FF.F....                                                                                                      [100%]
====================================================== FAILURES =======================================================
________________________________________________ test_iter_start_type _________________________________________________

    def test_iter_start_type():
        with pytest.raises(TypeError):
            list(Seasons.iter("зима", 5))
        with pytest.raises(TypeError):
>           list(Seasons.iter(5, 5))

1.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

start_season = 5, count = 5

    @staticmethod
    def iter(start_season, count):
        """Iterates over the seasons starting from the given season
        and for the given number of seasons.
        """
        if not isinstance(start_season, int) or not isinstance(count, int):
            raise TypeError("Both start_season and count must be integers")
        if count < 0:
            raise ValueError("Count must be non-negative")
        if start_season < 0 or start_season >= len(Seasons.SEASONS):
>           raise ValueError("Start season must be in the range [0, 3]")
E           ValueError: Start season must be in the range [0, 3]

1.py:45: ValueError
____________________________________________________ test_seasons _____________________________________________________

    def test_seasons():
>       assert Seasons.FALL in Seasons
E       TypeError: argument of type 'type' is not iterable

1.py:83: TypeError
___________________________________________________ test_season_str ___________________________________________________

    def test_season_str():
>       assert str(Seasons.FALL) == "осінь"
E       AssertionError: assert '3' == 'осінь'
E         
E         - осінь
E         + 3

1.py:87: AssertionError
____________________________________________________ test_now_str _____________________________________________________

    def test_now_str():
>       assert str(Seasons.now()) == "зима"
E       AssertionError: assert '0' == 'зима'
E         
E         - зима
E         + 0

1.py:96: AssertionError
=============================================== short test summary info ===============================================
FAILED 1.py::test_iter_start_type - ValueError: Start season must be in the range [0, 3]
FAILED 1.py::test_seasons - TypeError: argument of type 'type' is not iterable
FAILED 1.py::test_season_str - AssertionError: assert '3' == 'осінь'
FAILED 1.py::test_now_str - AssertionError: assert '0' == 'зима'
4 failed, 7 passed in 0.07s
